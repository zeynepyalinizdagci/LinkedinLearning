{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class PreloadingService {\n  preload(route, fn) {\n    return route.data && route.data['preload'] ? fn() : of(null);\n  }\n}\nPreloadingService.ɵfac = function PreloadingService_Factory(t) {\n  return new (t || PreloadingService)();\n};\nPreloadingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PreloadingService,\n  factory: PreloadingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","PreloadingService","preload","route","fn","data","factory","ɵfac","providedIn"],"sources":["C:\\Projects\\Angular\\angular-essential-training-3266043\\src\\app\\services\\preloading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreloadingService implements PreloadingStrategy {\r\n\r\n  public preload(route: Route, fn: () => Observable<any>): Observable<any> {\r\n    return (route.data && route.data['preload']) ? fn() : of(null);\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;;AAKrC,OAAM,MAAOC,iBAAiB;EAErBC,OAAOA,CAACC,KAAY,EAAEC,EAAyB;IACpD,OAAQD,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACE,IAAI,CAAC,SAAS,CAAC,GAAID,EAAE,EAAE,GAAGJ,EAAE,CAAC,IAAI,CAAC;EAChE;;AAJWC,iBAAiB,C;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB,C;SAAjBA,iBAAiB;EAAAK,OAAA,EAAjBL,iBAAiB,CAAAM,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}